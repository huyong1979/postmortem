#$miscellaneous PVs for Postmortem application
#scanOnce: Process SR-APHLA{PM}LastDumpTS-Calc_
#scanOnce: Process SR-APHLA{PM}LastResetTS-Calc_
#scanOnce: Process SR-APHLA{PM}LastResetTS-Sts

#SR-APHLA{PM}LastDumpTS-Calc_ is processed during iocInit
record(calcout,"SR-APHLA{PM}LastDumpTS-Calc_") {
    field(TPRO,"1")
    field(INPA,"SR:C23-BI{BPM:10}PM:Status-I CP")
    field(CALC,"A")
    field(OOPT,"Transition To Zero")
    field(OUT, "SR-APHLA{PM}LastDumpTS-Sts.PROC")
}

record(stringin, "SR-APHLA{PM}LastDumpTS-Sts")
{
    field(DTYP,"Soft Timestamp")
    # DO NOT use PINI, otherwise, autosave does not work
#recGblGetTimeStamp: dbGetTimeStamp failed, 
#SR-APHLA{PM}LastDumpTS-Sts.TSEL = SR:C23-BI{BPM:10}PM:Status-I
    #field(PINI,"YES")
    field(UDF,"0")
    field(TPRO,"1")
    field(TSEL,"SR:C23-BI{BPM:10}PM:Status-I.TIME")
    field(INP, "@%Y-%m-%d %H:%M:%S.%f")
    info(autosaveFields_pass0, "VAL")
    field(FLNK, "SR-APHLA{}PM-Cmd")
}

record(bo, "SR-APHLA{}PM-Cmd") {
    field(DTYP,"Launcher")
    field(OUT, "@python /epics/iocs/postmortem/save_pmdata_v2.py")
    field(ZNAM,"Idle")
    field(ONAM,"Setting")
}


#SR-APHLA{PM}LastResetTS-Calc_ is processed during iocInit
record(calcout,"SR-APHLA{PM}LastResetTS-Calc_") {
    field(TPRO,"1")
    field(INPA,"SR:C23-BI{BPM:10}PM:Status-I CP")
    field(CALC,"A")
    field(OOPT,"Transition To Non-zero")
    field(OUT, "SR-APHLA{PM}LastResetTS-Sts.PROC")
}

#SR-APHLA{PM}LastResetTS-Sts is processed during iocInit
record(stringin, "SR-APHLA{PM}LastResetTS-Sts")
{
    field(DTYP,"Soft Timestamp")
    field(UDF,"0")
    field(TPRO,"1")
    field(TSEL,"SR:C23-BI{BPM:10}PM:Status-I.TIME")
    field(INP, "@%Y-%m-%d %H:%M:%S.%f")
    info(autosaveFields_pass0, "VAL")
}

record(ai, "SR-APHLA{PM}LoopTime-I") {
    field(DESC,"Total loop time")
    field(EGU, "Sec")
    field(PINI, "YES")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "SR-APHLA{PM}Status-Sts")
{
    field(PINI,"YES")
    field(ZRST,"All data saved!")
    field(ONST,"1 sub-system failed")
    field(TWST,"2 sub-system failed")
    field(THST,"3 sub-system failed!")
    field(FRST,"4 sub-system failed!")
    field(FVST,"5 sub-system failed!")
    field(SXST,"6 sub-system failed!")
    field(SVST,"7 sub-system failed!")
    field(EIST,"8 sub-system failed!")
    field(NIST,"9 sub-system failed!")
    field(TEST,"10 sub-system failed!")
    field(ELST,"11 sub-system failed!")
    field(TVST,"12 sub-system failed!")
    field(TTST,"13 sub-system failed!")
    field(FTST,"14 sub-system failed!")
    field(FFST,"15 sub-system failed!")
    info(autosaveFields_pass0, "VAL")
}

record(bi, "SR-APHLA{PM}Program-Sts") {
    field(ZNAM,"PM program ended")
    field(ONAM,"PM program started")
}

#Bunch-by-Bunch Feedback
record(mbbi, "SR-APHLA{BBF}PM:Status-Sts")
{
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"Done! Ready for next one")
    field(ONST,"Started to read data ...")
    field(TWST,"Started to write data ...")
    field(THST,"Failed!")
    info(autosaveFields_pass0, "VAL")
}

record(waveform, "SR-APHLA{BBF}PM:ErrorMsg-Wf") {
    field(DESC,"Error Message")
    field(NELM,"300")
    field(FTVL,"CHAR")
    field(PINI, "YES")
    info(autosaveFields_pass1, "VAL")
}

record(ai, "SR-APHLA{BBF}PM:RWTime-I") {
    field(DESC,"time spent on Read/Write")
    field(EGU, "Sec")
    field(PINI, "YES")
    info(autosaveFields_pass1, "VAL")
}


